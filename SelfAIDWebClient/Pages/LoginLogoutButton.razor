@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider

@using SelfAID.WebClient.Authorization

<AuthorizeView>
    <Authorized>
        <button @onclick="Logout" class="btn btn-danger">Logout</button>
    </Authorized>

    <NotAuthorized>
        <button @onclick="Login" class="btn btn-primary">Login</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task Login()
    {
        NavigationManager.NavigateTo("login");
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("eraseCookie", "authToken");

        var customAuthStateProvider = AuthenticationStateProvider as CustomAuthStateProvider;
        customAuthStateProvider?.MarkUserAsLoggedOut();

        NavigationManager.NavigateTo("login", forceLoad: true);
    }


}
